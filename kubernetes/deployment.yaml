# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   annotations:
#     kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert -f docker-compose.yml
#     kompose.version: 1.21.0 (992df58d8)
#   creationTimestamp: null
#   labels:
#     io.kompose.service: topics
#   name: topics
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       io.kompose.service: topics
#   strategy: {}
#   template:
#     metadata:
#       annotations:
#         kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert -f docker-compose.yml
#         kompose.version: 1.21.0 (992df58d8)
#       creationTimestamp: null
#       labels:
#         io.kompose.service: topics
#     spec:
#       containers:
#       - image: gcr.io/bdfi-367411/bdfi-topics-kafka:2
#         imagePullPolicy: ""
#         name: topics
#         ports:
#         - containerPort: 9092
#         envFrom:
#             - configMapRef:
#                 name: configmap-pfinal
#         resources: {}
#       serviceAccountName: ""
#       volumes: null
# status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert -f docker-compose.yml
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: zookeeper
  name: zookeeper
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: zookeeper
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert -f docker-compose.yml
        kompose.version: 1.21.0 (992df58d8)
      creationTimestamp: null
      labels:
        io.kompose.service: zookeeper
    spec:
      containers:
      - image: gcr.io/bdfi-367411/bdfi-zookeeper:2
        imagePullPolicy: ""
        name: zookeeper
        ports:
          - containerPort: 2181
        resources: {}
      restartPolicy: Always
      serviceAccountName: ""
      volumes: null
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert -f docker-compose.yml
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: spark
  name: spark
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: spark
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert -f docker-compose.yml
        kompose.version: 1.21.0 (992df58d8)
      creationTimestamp: null
      labels:
        io.kompose.service: spark
    spec:
      containers:
      - image: gcr.io/bdfi-367411/bdfi-spark:3
        imagePullPolicy: ""
        name: spark
        envFrom:
          - configMapRef:
              name: configmap-pfinal
        resources: {}
      restartPolicy: Always
      serviceAccountName: ""
      volumes: null
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert -f docker-compose.yml
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: kafka
  name: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: kafka
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert -f docker-compose.yml
        kompose.version: 1.21.0 (992df58d8)
      creationTimestamp: null
      labels:
        io.kompose.service: kafka
    spec:
      containers:
      - image: gcr.io/bdfi-367411/bdfi-kafka:3
        imagePullPolicy: ""
        name: kafka
        ports:
          - containerPort: 9092
        envFrom:
            - configMapRef:
                name: configmap-pfinal
        resources: {}
      restartPolicy: Always
      serviceAccountName: ""
      volumes: null
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert -f docker-compose.yml
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: flask-server
  name: flask-server
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: flask-server
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert -f docker-compose.yml
        kompose.version: 1.21.0 (992df58d8)
      creationTimestamp: null
      labels:
        io.kompose.service: flask-server
    spec:
      containers:
      - image: gcr.io/bdfi-367411/bdfi-flask-server:2
        imagePullPolicy: ""
        name: flask-server
        ports:
          - containerPort: 5000
        envFrom:
          - configMapRef:
              name: configmap-pfinal
        resources: {}
      restartPolicy: Always
      serviceAccountName: ""
      volumes: null
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert -f docker-compose.yml
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: mongo
  name: mongo
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: mongo
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert -f docker-compose.yml
        kompose.version: 1.21.0 (992df58d8)
      creationTimestamp: null
      labels:
        io.kompose.service: mongo
    spec:
      containers:
      - image: gcr.io/bdfi-367411/bdfi-mongo:2
        imagePullPolicy: ""
        name: mongo
        ports:
          - containerPort: 27017
        resources: {}
      restartPolicy: Always
      serviceAccountName: ""
      volumes: null
status: {}

